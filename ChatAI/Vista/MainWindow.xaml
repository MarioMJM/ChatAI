<Window x:Class="ChatAI.Vista.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:local="clr-namespace:ChatAI"
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:converters="clr-namespace:ChatAI.Converters"
        
        mc:Ignorable="d"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        Title="MIA" Height="450" Width="800" Icon="/Resources/Icon/MIA_icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="Yellow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="RoundedButtonStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="BorderButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="20"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}">
                                <Image x:Name="ToggleIcon" Width="25" Height="25" Source="{Binding IconSource}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="BorderButton" Value="#333333"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="BorderButton" Value="#555555"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="BorderButton" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="PanelButtonStyle">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Width" Value="35"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Tag" Value="/Resources/Images/new_button_icon_w.png"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="BorderButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="20"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}">
                                <Image x:Name="ButtonIcon"
                                       Width="25" Height="25"
                                       Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="BorderButton" Value="#333333"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="BorderButton" Value="#555555"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="BorderButton" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ControlButton" BasedOn="{StaticResource RoundedButtonStyle}">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Tag" Value="/Resources/Images/text_to_speech.png"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="BorderButton"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0"
                                    CornerRadius="15"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}">
                                <Image x:Name="ButtonIcon"
                                   Width="20" Height="20"
                                   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" TargetName="BorderButton" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" TargetName="BorderButton" Value="0.6"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="BorderButton" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <DockPanel LastChildFill="True">
            <Grid Background="#1E1E1E" Width="60" HorizontalAlignment="Left" DockPanel.Dock="Left">
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Image gif:ImageBehavior.RepeatBehavior="9999"
                           gif:ImageBehavior.AnimatedSource="\Resources\GIF\chatbot_greet_nobg.gif"
                           Height="35" Width="35"/>
                    <Button 
                        Style="{StaticResource PanelButtonStyle}"
                        Tag="/Resources/Images/new_button_icon_w.png"
                        Click="HandleNewChat"/>
                    <Button 
                        x:Name="ButtonConfig" 
                        Style="{StaticResource PanelButtonStyle}" 
                        Tag="/Resources/Images/config_button_icon_w.png"
                        Click="ButtonConfig_Click"
                        Visibility="Collapsed"/> <!--Decidir qué hacer-->
                    <Popup x:Name="PopupConfig"
                           PlacementTarget="{Binding ElementName=ButtonConfig}"
                           Placement="Right"
                           StaysOpen="False"
                           HorizontalOffset="10" VerticalOffset="0">
                        <Border Background="#1E1E1E"
                                CornerRadius="4"
                                Padding="10"
                                Width="180"
                                Height="80">
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock x:Name="ModeLabel" Text="Dark Mode" Foreground="White" FontSize="14" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <ui:ToggleSwitch x:Name="SwitchMode" OnContent="Oscuro" OffContent="Claro" Toggled="ToggleSwitch_Toggled"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
            </Grid>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="70"/>
                </Grid.RowDefinitions>

                <ListBox ItemsSource="{Binding MessageHistory}" Margin="10" Grid.Row="0" Background="Transparent">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment">
                                <Setter.Value>
                                    <Binding Path="EsUsuario">
                                        <Binding.Converter>
                                            <converters:BoolToHorizontalAlignmentConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Padding="8"
                                    Margin="15"
                                    Background="{Binding EsUsuario, Converter={StaticResource BoolToColorConverter}}"
                                    CornerRadius="5"
                                    MaxWidth="600"
                                    MinWidth="200">
                                <StackPanel Orientation="Vertical">

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Image Grid.Column="0"
                                               gif:ImageBehavior.RepeatBehavior="9999"
                                               gif:ImageBehavior.AnimatedSource="/Resources/GIF/chatbot_nobg.gif"
                                               Width="30" Height="30"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"
                                               Visibility="{Binding Contenido, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=True}"/>

                                        <TextBlock Grid.Column="1"
                                                   Text="{Binding Contenido}" 
                                                   TextWrapping="Wrap"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding Contenido, Converter={StaticResource StringToVisibilityConverter}}"/>
                                    </Grid>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,5,0,0" Visibility="{Binding Contenido, Converter={StaticResource StringToVisibilityConverter}}">
                                        <Button 
                                            Style="{StaticResource ControlButton}"
                                            Background="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=Background}"
                                            Command="{Binding DataContext.ReadMessageCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding Contenido}"
                                            Tag="/Resources/Images/text_to_speech_icon_w.png"/>
                                        <Button 
                                            Style="{StaticResource ControlButton}"
                                            Background="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=Background}"
                                            Command="{Binding DataContext.CopyToClipboardCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding Contenido}"
                                            Tag="/Resources/Images/clipboard_icon_w.png"/>
                                    </StackPanel>
                                </StackPanel>

                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Border Background="#1E1E1E"
                        CornerRadius="20"
                        Margin="12"
                        Grid.Row="1"
                        Width="600">

                    <Grid Grid.Row="1" MaxHeight="100">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="UserInput"
                                 Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}"
                                 Grid.Column="0"
                                 Background="#1E1E1E"
                                 Foreground="White"
                                 BorderThickness="0"
                                 FontSize="14"
                                 VerticalAlignment="Center"
                                 Margin="15,0,0,0">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="KeyDown">
                                    <behaviors:InvokeCommandAction Command="{Binding EnterKeyCommand}" PassEventArgsToCommand="True"/>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>

                            <TextBox.Resources>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Grid>
                                                    <TextBlock Text="Habla conmigo"
                                                               Foreground="LightGray"
                                                               FontSize="14"
                                                               VerticalAlignment="Center"
                                                               IsHitTestVisible="False"
                                                               Visibility="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource TextToVisibilityConverter}}"/>
                                                    <ScrollViewer x:Name="PART_ContentHost" Padding="15,0,0,0"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <Button x:Name="ToggleButton"
                                Height="35"
                                Width="35"
                                Margin="5"
                                Grid.Column="1"
                                Background="Transparent"
                                BorderThickness="0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Right"
                                Style="{StaticResource RoundedButtonStyle}"
                                Command="{Binding ButtonClickedCommand}">
                        </Button>
                        <Popup IsOpen="{Binding IsRecording}"
                               PlacementTarget="{Binding ElementName=ToggleButton}"
                               Placement="Top"
                               StaysOpen="True">
                            <Border Background="#1E1E1E"
                                    CornerRadius="4"
                                    Padding="8">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="Micrófono activo" Foreground="White"/>
                                    <ProgressBar Minimum="0"
                                                 Maximum="100"
                                                 Value="{Binding AudioLevel}"
                                                 Height="10"
                                                 Margin="0,5,0,0"/>
                                    <Ellipse Width="20"
                                             Height="20"
                                             Fill="Green"
                                             Margin="0,5,0,0">
                                        <Ellipse.OpacityMask>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Ellipse Width="20"
                                                             Height="20"
                                                             Fill="Green"
                                                             Opacity="{Binding AudioLevel, Converter={StaticResource AudioLevelToOpacityConverter}}"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Ellipse.OpacityMask>
                                    </Ellipse>
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
